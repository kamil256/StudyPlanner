@model StudyPlanner.Models.AddBookModel
<span>@ViewBag.cover</span>
<br />
<h1 style="border-bottom: 1px solid #ddd; border-bottom-left-radius: 100px 1px; border-bottom-right-radius: 100px 1px; padding-bottom: 10px; margin-bottom: 10px;">Add new book</h1>
@using (Html.BeginForm("AddBook", "Home", FormMethod.Post, new { id = "Form", enctype = "multipart/form-data" }))
            {
    @*<input type = "hidden" id = "AddAuthor" name = "AddAuthor" value = "false" />*@


           <div class="form-group">
        @Html.LabelFor(x => x.Title, "Title")
        @Html.TextBoxFor(x => x.Title, new { @class = "form-control", style="max-width: 500px; width: 100%", required = "required" })
    </div>
    
    <div class="form-group">
        
        @Html.LabelFor(x => x.Author, "Authors")
        @*@for (int i = 1; i < Model.Authors.Count; i++) //zerowy element jest dla podtrzymania wartości Model.Authors
        {
            <p>@Model.Authors[i]</p>
        }*@
        <ul id="AddedAuthors" style="padding: 0; margin : 0 0 2px 0; max-width: 500px; width: 100%;"></ul>
        <table style="max-width: 500px; width: 100%;">
            <tr>
                <td><input type="text" value="" id="Author" name="Author" style="max-width: 100%" class="form-control" autocomplete="off" list="authorsList" /></td>
                @*<td>@Html.TextBox("Author", "", new { id = "Author", style = "max-width: 100%", @class = "form-control", autocomplete = "off", list = "authorsList" })</td>*@
                <td style="width: 5px"></td>
                <td style="width: 10%"><button id="AddAuthorBtn" class="btn btn-default">Add author</button></td>
            </tr>
        </table>
        <datalist id="authorsList">
            @foreach (var a in Model.AuthorsList)
            {
                <option value="@a"></option>
            }
        </datalist>
    </div>
    @Html.HiddenFor(x => x.Authors[0])
    <div id="HiddenInputs">
        @for (int i = 1; i < Model.Authors.Count; i++)
        {
            @Html.HiddenFor(x => x.Authors[i])
        }
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Publisher, "Publisher")
        @Html.TextBoxFor(x => x.Publisher, new { @class = "form-control", style = "max-width: 500px; width: 100%", required = "required", list = "publishersList", autocomplete = "off" })
        <datalist id="publishersList">
            @foreach (var p in Model.PublishersList)
            {
                <option value="@p"></option>
            }
        </datalist>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Released, "Released")
        @*@Html.TextBoxFor(x => x.Released, new { @class = "form-control", type = "date", style = "max-width: 500px; width: 100%", required = "required", value=Model.Released.ToShortDateString() })*@
        <input type="date" name="Released" id="Released" class="form-control" style="max-width: 500px; width: 100%" required="required" value="@Model.Released.ToShortDateString()" />
        @*// Nadal problem z datą*@
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Pages, "Pages")
        @Html.TextBoxFor(x => x.Pages, new { @class = "form-control", type = "number", style = "max-width: 500px; width: 100%", required = "required" })
    </div>
    <div class="form-group">
        @*@Html.TextBoxFor(x => x.cover, new { type = "file", onchange = "alert(this.files[0].size)", accept = "image/*" })*@
        <div class="form-group">
            @Html.Label("cover", "Cover image")
            <input type="file" name="cover" accept="image/*" class="form-control" style = "max-width: 500px; width: 100%", required = "required" onchange="$('#Form').submit()" />
        </div>
    </div>
    <input type="submit" value="Add" class="btn btn-default" />
    @Html.ActionLink("Cancel", "Books", null, new { @class = "btn btn-default" })
    <input type="button" id="tempSubmit" value="Temporary submit" />
}

<script>
    window.onload = function()
    {
        $("#tempSubmit").on("click", function () {
            //$("#AddAuthor").val(true);
            $("#Form").submit();
        });

        $("#Author").on("keydown",
            function (e) {
                if ((e.keyCode | e.which) == 13)
                {
                    e.preventDefault();
                    AddAuthor();
                }
            });

        $("#AddAuthorBtn").on("click",
            function (e) {
                e.preventDefault();
                AddAuthor();
            });

        GetAuthorsFromHiddenInputs();
        DisplayAuthors();
    }

    var authors = [];

    function GetAuthorsFromHiddenInputs()
    {
        var hidden;
        var i = 0;
        
        while (hidden = document.getElementById("Authors_" + i + "_")) {
            if (hidden.value === "empty") {
                i++;
                continue;
            }
            authors.push(hidden.value);
            i++;
        }
    }

    function GetHiddenInputsFromAuthors()
    {
        var hiddenInputs = document.getElementById("HiddenInputs");
        hiddenInputs.innerHTML = "";
        for (var i = 0; i < authors.length; i++)
        {
            hiddenInputs.innerHTML += "<input id='Authors_" + (i + 1) + "_' name='Authors[" + (i + 1) + "]' type='hidden' value='" + authors[i] + "' />";
        }
        //<input id="Authors_0_" name="Authors[0]" type="hidden" value="empty" />
    }

    function DisplayAuthors()
    {
        var AddedAuthorsDiv = document.getElementById("AddedAuthors");
        AddedAuthorsDiv.innerHTML = "";
        for (var i = 0; i < authors.length; i++)
            AddedAuthorsDiv.innerHTML += "<li id='author_li_" + i + "' style='cursor: arrow; display: inline-block; background-color: #eee; padding: 3px 5px; margin: 2px; border-radius: 5px;'>" + authors[i] + "<b style='cursor: arrow' onclick='RemoveAuthor(" + i + ")'> &times;</b></li>";
    }

    function AddAuthor()
    {
        if ($("#Author").val() != "")
        {
            authors.push($("#Author").val());
            $("#Author").val("");
            $("#Author").focus();
            GetHiddenInputsFromAuthors();
            DisplayAuthors();
        }

        //if ($("#Author").val() != "")
        //{
        //    $("#AddAuthor").val(true);
        //    $("#Form").submit();
        //}
    }

    function RemoveAuthor(i)
    {
        authors.splice(i, 1);
        GetHiddenInputsFromAuthors();
        DisplayAuthors();
    }
</script>