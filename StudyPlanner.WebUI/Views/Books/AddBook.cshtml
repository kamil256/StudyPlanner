@model StudyPlanner.WebUI.Models.BooksAddBookViewModel

<table id="addBook" class="@(ViewBag.Hidden == true ? "hidden" : null)" style="position: fixed; top: 0; left: 0; height: 100%; width: 100%; z-index: 1001; ">
    <tr>
        <td style="vertical-align: middle; background: rgba(255, 255, 255, 0.8)">
            <div class="popUp">
                <h1 class="heading">Add new book</h1>
                <div @*id="addBookPopUp"*@>

                    @using (Ajax.BeginForm("AddBook1", new { id = "Form" }, new AjaxOptions { UpdateTargetId = "addBookPopUp" }))
                    {
                        <div class="form-group">
                            @Html.LabelFor(x => x.Title)
                            @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.Authors)
                            <ul id="authorsList">
                                @if (Model.Authors != null)
                                {
                                    for (int i = 0; i < Model.Authors.Length; i++)
                                    {
                                        <li>@Model.Authors[i] <b onclick="RemoveAuthor(@i)">&times;</b></li>
                                    }
                                }
                            </ul>
                            <input id="Author" class="form-control" list="authorsDataList" onchange="AddAuthor(this.value)" />
                            <datalist id="authorsDataList">
                                @foreach (var a in Model.AuthorsList)
                                {
                                    <option value="@a.Name"></option>
                                }
                            </datalist>
                            <div id="hiddenAuthors">
                                @if (Model.Authors != null)
                                {
                                    for (int i = 0; i < Model.Authors.Length; i++)
                                    {
                                        @Html.HiddenFor(x => x.Authors[i])
                                    }
                                }
                            </div>
                        </div>
                        <table>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        @Html.LabelFor(x => x.Publisher)
                                        @Html.TextBoxFor(x => x.Publisher, new { @class = "form-control", list = "publishersDataList" })
                                        <datalist id="publishersDataList">
                                            @foreach (var p in Model.PublishersList)
                                            {
                                                <option value="@p.Name"></option>
                                            }
                                        </datalist>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(x => x.Released)
                                        @Html.TextBoxFor(x => x.Released, new { type = "date", @class = "form-control" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(x => x.Pages)
                                        @Html.TextBoxFor(x => x.Pages, new { type = "number", @class = "form-control" })
                                    </div>
                                </td>
                                <td>
                                    @Html.LabelFor(x => x.Cover)
                                    <div class="form-control">
                                        <img id="image" src="@Url.Action("GetTempCover", new { dummy = DateTime.Now.ToShortTimeString() })" class="@(StudyPlanner.WebUI.Models.Cover.IsSet() ? null : "hidden")" />
                                        <b id="chooseImageMsg" class="@(StudyPlanner.WebUI.Models.Cover.IsSet() ? "hidden" : null)">Choose image</b>
                                        <input id="Cover" name="Cover" type="file" @*onchange="readURL(this)"*@ onchange="sendCoverImage()" />
                                    </div>
                                </td>
                            </tr>
                        </table>                
                        <input id="submit" type="submit" value="Add" class="btn btn-default" />
                        @Html.ActionLink("Cancel", "List", null, new { @class = "btn btn-default" })
                    }
                </div>   
            </div>
        </td>
    </tr>
</table>