@model StudyPlanner.WebUI.Models.BooksAddBookViewModel

<link href="~/Content/CSS/popUp.css" rel="stylesheet" />
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

<div class="popUp">
    <h1 class="heading">Add new book</h1>


    @using (Ajax.BeginForm("AddBook", new { enctype = "multipart/form-data", autocomplete = "off" }, new AjaxOptions() { UpdateTargetId = "addBookPopUp" } ))//(Html.BeginForm("AddBook", "Books", FormMethod.Post, new { enctype = "multipart/form-data", autocomplete = "off" }))
    {
        //@Html.ValidationSummary()

        <div class="form-group">
            @Html.LabelFor(x => x.Title)
            @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Authors)
            <ul id="authorsList">
                @if (Model.Authors != null)
            {
                for (int i = 0; i < Model.Authors.Length; i++)
                {
                        <li>@Model.Authors[i] <b onclick="RemoveAuthor(@i)">&times;</b></li>
                    }
                }
            </ul>
            <input id="Author" class="form-control" list="authorsDataList" />
            <datalist id="authorsDataList">
                @foreach (var a in Model.AuthorsList)
            {
                    <option value="@a.Name"></option>
                }
            </datalist>
            <div id="hiddenAuthors">
                @if (Model.Authors != null)
            {
                for (int i = 0; i < Model.Authors.Length; i++)
                {
                        @Html.HiddenFor(x => x.Authors[i])
                    }
                }
            </div>
        </div>
        <table>
            <tr>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Publisher)
                        @Html.TextBoxFor(x => x.Publisher, new { @class = "form-control", list = "publishersDataList" })
                        <datalist id="publishersDataList">
                            @foreach (var p in Model.PublishersList)
                            {
                                <option value="@p.Name"></option>
                            }
                        </datalist>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Released)
                        @Html.TextBoxFor(x => x.Released, new { type = "date", @class = "form-control" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Pages)
                        @Html.TextBoxFor(x => x.Pages, new { type = "number", @class = "form-control" })
                    </div>
                </td>
                <td>
                    @Html.LabelFor(x => x.Cover)
                    <div class="form-control">
                        <img id="image" src="@Url.Action("GetTempCover")" class="@(StudyPlanner.WebUI.Models.Cover.IsSet() ? null : "hidden")" />
                        <b id="chooseImageMsg" class="@(StudyPlanner.WebUI.Models.Cover.IsSet() ? "hidden" : null)">Choose image</b>
                        <input id="Cover" name="Cover" type="file" />
                    </div>
                </td>
            </tr>
        </table>
        <input type="submit" value="Add" class="btn btn-default" />
        @Html.ActionLink("Cancel", "List", null, new { @class = "btn btn-default" })
    }

</div>

<script>
    function readURL(input) {

        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                document.getElementById("image").className = "";//document.getElementById("image").style.display = "block";
                document.getElementById("chooseImageMsg").className = "hidden";
                $('#image').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    $("#Cover").change(function () {
        readURL(this);
    });

    document.getElementById("Cover").onclick = function()
    {
        var image = document.getElementById("image");
        image.className = "hidden";
        document.getElementById("chooseImageMsg").className = "";
    };

    window.onload = function()
    {
        $("#Author").on("keydown",
            function (e) {
                if ((e.keyCode | e.which) == 13)
                {
                    e.preventDefault();
                    AddAuthor($("#Author").val());
                }
            });

        $("#Author").on("change",
            function()
            {
                AddAuthor($("#Author").val());
            });
    }

    var authors = [];

    function getAuthorsFromHidden()
    {
        authors = [];
        var inputAuthors = document.getElementById("hiddenAuthors").getElementsByTagName("input");
        for (var i = 0; i < inputAuthors.length; i++)
        {
            authors.push(inputAuthors[i].value);
        }
    }

    function createHiddenFromAuthors()
    {
        var authorsElement = document.getElementById("authorsList");
        authorsElement.innerHTML = "";
        for (var i = 0; i < authors.length; i++)
            authorsElement.innerHTML += "<li>" + authors[i] + "<b onclick='RemoveAuthor(" + i + ")'> &times;</b></li> ";

        var inputAuthors = document.getElementById("hiddenAuthors");
        inputAuthors.innerHTML = "";
        for (var i = 0; i < authors.length; i++)
            inputAuthors.innerHTML += "<input type='hidden' id='Authors_" + i + "_' name='Authors[" + i + "]' value='" + authors[i] + "' />";
    }

    function AddAuthor(name)
    {
        if ($("#Author").val() != "")
        {
            getAuthorsFromHidden();
            if (authors.indexOf(name) == -1)
            {
                authors.push(name);
                createHiddenFromAuthors();
            }
            $("#Author").val("");
        }
    }

    function RemoveAuthor(nr)
    {
        getAuthorsFromHidden();
        authors.splice(nr, 1);
        createHiddenFromAuthors();
    }
</script>