@model StudyPlanner.WebUI.Models.BooksAddBookViewModel

<h1 id="add-edit-book-heading" class="heading"></h1>

<input id="add-edit-book-id" name="bookId" type="hidden" />
<div class="form-group">
    <label for="add-edit-book-title">Title</label>
    <input id="add-edit-book-title" name="title" class="form-control" />
</div>
<div class="form-group">
    <label for="author">Authors</label>
    <ul id="add-edit-book-authors-list"></ul>
    <input id="add-edit-book-author" class="form-control" list="add-edit-book-authors-data-list" onchange="AddAuthor(this.value)" />
    <datalist id="add-edit-book-authors-data-list">
        @foreach (var a in Model.AuthorsList)
        {
            <option value="@a.Name"></option>
        }
    </datalist>
    <div id="add-edit-book-hidden-authors-list"></div>
</div>
<table>
    <tr>
        <td>
            <div class="form-group">
                <label for="add-edit-book-publisher">Publisher</label>
                <input id="add-edit-book-publisher" name="publisher" class="form-control" list="add-edit-book-publishers-data-list" />
                <datalist id="add-edit-book-publishers-data-list">
                    @foreach (var p in Model.PublishersList)
                    {
                        <option value="@p.Name"></option>
                    }
                </datalist>
            </div>
            <div class="form-group">
                <label for="add-edit-book-released">Released</label>
                <input id="add-edit-book-released" name="released" type="date" class="form-control" />
            </div>
            <div class="form-group">
                <label for="add-edit-book-pages">Pages</label>
                <input id="add-edit-book-pages" name="pages" type="number" class="form-control" />
            </div>
        </td>
        <td>
            <label for="add-edit-book-cover">Cover</label>
            <div class="form-control">
                <img id="image" src="" class="hidden" />
                <b id="chooseImageMsg">Choose image</b>
                <input id="add-edit-book-cover" name="cover" type="file" accept="image/*" @*onclick="cancelCover()"*@ onchange="readURL(this)" />
            </div>
        </td>
    </tr>
</table>                
<button id="add-edit-book-submit" type="submit" class="btn btn-default" onclick="sendData()">Ok</button>
<button class="btn btn-default" onclick="$('#add-edit-book-dialog').dialog('close')">Cancel</button>

<script>
    var selectedFile;

    function sendData()
    {
        var data = new FormData();
        var inputs = document.getElementById("add-edit-book-dialog").getElementsByTagName("input");
        for (var i = 0; i < inputs.length; i++)
            if (inputs[i].type != "file" && inputs[i].name)
                data.append(inputs[i].name, inputs[i].value);
        data.append("cover", selectedFile);
        
        $.ajax({
            url: '@Url.Action("AddBook")',
            cache: false,
            contentType: false,
            processData: false,
            data: data,
            dataType: "json",
            type: 'POST',
            success: function(response) 
            {
                if (response.ResponseUrl != null)
                    window.location.href = response.ResponseUrl;                
            }
        });
    }
    
    function readURL(input)
    {
        if (input.files && input.files[0])
        {
            var reader = new FileReader();
            reader.onload = function(e)
            {
                document.getElementById("image").className = "";
                document.getElementById("chooseImageMsg").className = "hidden";
                $('#image').attr('src', e.target.result);
            };
            reader.readAsDataURL(input.files[0]);
            selectedFile = input.files[0];
        }
        else
            console.log(input.files);
    }

    function cancelCover()
    {
        if (!imageSentToServer)
        {
            document.getElementById("image").className = "hidden";
            document.getElementById("chooseImageMsg").className = "";
        }
    }

    //window.onload = function () {
    //    $("#add-edit-book-author").on("keydown",
    //        function (e) {
    //            if ((e.keyCode | e.which) == 13) {
    //                e.preventDefault();
    //                AddAuthor($("#add-edit-book-author").val());
    //            }
    //        });



        
    //}

    function getAuthorsFromHidden() {
        var authors = [];
        var inputAuthors = document.getElementById("add-edit-book-hidden-authors-list").getElementsByTagName("input");
        for (var i = 0; i < inputAuthors.length; i++) {
            authors.push(inputAuthors[i].value);
        }
        return authors;
    }

    function createHiddenFromAuthors(authors) {
        var authorsElement = document.getElementById("add-edit-book-authors-list");
        authorsElement.innerHTML = "";
        for (var i = 0; i < authors.length; i++)
            authorsElement.innerHTML += "<li>" + authors[i] + "<b onclick='RemoveAuthor(" + i + ")'> &times;</b></li> ";

        var inputAuthors = document.getElementById("add-edit-book-hidden-authors-list");
        inputAuthors.innerHTML = "";
        for (var i = 0; i < authors.length; i++)
            inputAuthors.innerHTML += "<input type='hidden' id='Authors_" + i + "_' name='Authors[" + i + "]' value='" + authors[i] + "' />";
    }

    function AddAuthor(name) {
        if ($("#add-edit-book-author").val() != "")
        {
            var authors = getAuthorsFromHidden();
            if (authors.indexOf(name) == -1) {
                authors.push(name);
                createHiddenFromAuthors(authors);
            }
            $("#add-edit-book-author").val("");
        }
    }

    function RemoveAuthor(nr) {
        var authors = getAuthorsFromHidden();
        authors.splice(nr, 1);
        createHiddenFromAuthors(authors);
    }
</script>