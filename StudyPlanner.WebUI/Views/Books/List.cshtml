@using StudyPlanner.WebUI.Models

@model BooksListViewModel


@{ 
    ViewBag.Title = "Books";
}

<h1 class="heading">Books <button class="btn btn-default btn-xs" onclick="addBook()">Add new</button> @*@Html.ActionLink("Add new", "List", new { AddBook = true }, new { @class = "btn btn-default btn-xs" })*@</h1>

<div class="row">
    <div class="col-sm-3 side-panel">
        @using (Html.BeginForm("List", "Books", FormMethod.Post, new { id = "FilteringForm", autocomplete = "off" }))
        {
            <div class="form-group">
                @Html.LabelFor(x => x.SearchString, "Search titles and authors:")
                @Html.TextBoxFor(x => x.SearchString, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.ReleasedFrom, "Released from:")
                @Html.TextBoxFor(x => x.ReleasedFrom, new { @class = "form-control", type = "date" })
            </div>
            <div class="form-group">
                    @Html.LabelFor(x => x.ReleasedTo, "Released to:")
                    @Html.TextBoxFor(x => x.ReleasedTo, new { @class = "form-control", type = "date" })
            </div>
            <div class="form-group">
                @Html.Label("Pages:")
                <div class="form-control-range">
                    @Html.TextBoxFor(x => x.PagesFrom, new { @class = "form-control", type = "number" })
                    <div>-</div>
                    @Html.TextBoxFor(x => x.PagesTo, new { @class = "form-control", type = "number" })
                </div>
            </div>
            <div class="form-group">
                <b>Authors:</b>
                @foreach (var a in Model.Authors)
                {
                    <div class="checkbox">
                        @Html.LabelFor(x => x.SelectedAuthors[a.AuthorId.ToString()], a.Name)
                        @Html.CheckBoxFor(x => x.SelectedAuthors[a.AuthorId.ToString()])
                    </div>
                }
            </div>
            <div class="form-group">
                <b>Publishers:</b>
                @foreach (var p in Model.Publishers)
                {
                    <div class="checkbox">
                        @Html.LabelFor(x => x.SelectedPublishers[p.PublisherId.ToString()], p.Name)
                        @Html.CheckBoxFor(x => x.SelectedPublishers[p.PublisherId.ToString()])
                    </div>
                }
            </div>
            @Html.ActionLink("Clear filtering and sorting", "List", null, new { @class = "btn btn-default btn-sm" })
        }
    </div>

    <div class="col-sm-9">        
        @if (Model.Books.Count() == 0)
        {
            <div class="alert alert-danger">No books were found!</div>
        }
        else
        {
            <div class="form-group sorting-group">
                <b>Sort by: </b>
                @Html.DropDownListFor(x => x.SelectedSorting, new SelectList(Enum.GetNames(typeof(BooksListViewModel.Sorting)), Model.SelectedSorting), new { @class = "form-control", form = "FilteringForm" })
                @Html.DropDownListFor(x => x.SelectedSortingOrder, new SelectList(Enum.GetNames(typeof(BooksListViewModel.SortingOrder)), Model.SelectedSortingOrder), new { @class = "form-control", form = "FilteringForm" })
            </div>

            @Html.Pagination(Model.Pagination.CurrentPage, Model.Pagination.TotalPages, x => $"GoToPage({x})")

            foreach (var x in Model.Books)
            {
                @Html.Partial("BookInfo", new BooksBookInfoViewModel()
                   {
                       Book = x,
                       Authors = x.AuthorOfBooks.OrderBy(aob => aob.Priority).Select(aob => aob.Author).ToArray(),
                       SearchString = Model.SearchString
                   })
            }
            
            @Html.HiddenFor(x => x.Page, new { form = "FilteringForm" })
            @Html.Pagination(Model.Pagination.CurrentPage, Model.Pagination.TotalPages, x => $"GoToPage({x})")
        }
    </div>
</div>

<div id="add-book-dialog">
    @Html.Partial("AddBook", new BooksAddBookViewModel() { AuthorsList = Model.Authors, PublishersList = Model.Publishers })
</div>

<div id="remove-book-dialog">
    @Html.Partial("RemoveBook")
</div>

<script>
    $(document).ready(function()
    {
        $("#add-book-dialog").dialog(
        {
            autoOpen: false,
            modal: true,
            resizable: false
        });

        $("#remove-book-dialog").dialog(
        {
            autoOpen: false,
            modal: true,
            resizable: false
        });
    });

    function GoToPage(x)
    {
        document.getElementById("Page").value = x;
        $("#FilteringForm").submit();
    }

    $("#FilteringForm input").on("change", function () { $("#FilteringForm").submit(); });
    $("select[form='FilteringForm'").on("change", function () { $("#FilteringForm").submit(); });

    

    

    

    function addBook(bookId)
    {
        $("#bookId").val("");
        $("#title").val("");
        $("#publisher").val("");
        $("#released").val("");
        $("#pages").val("");

        document.getElementById("Cover").files = null;
        document.getElementById("image").outerHTML = "<img id='image' src='' class='hidden' />";
        imageSentToServer = false;
        document.getElementById("chooseImageMsg").className = "true";

        authors = [];
        createHiddenFromAuthors();

        $('#heading').html('Add new book');
        $('#addBookDialog').dialog('open');
    }
    

    
</script>